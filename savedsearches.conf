[Endpoint - J6DE - MSBuild In PowerShell Script - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1127.001"],"Migration":["ESM"],"Jira":["JEA-833"],"Validated":["2022-03-02"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = J6DE - MSBuild In PowerShell Script
action.customsearchbuilder.enabled = false
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.drilldown_name = Contributing Events for PowerShell Script Content
action.notable.param.drilldown_search = index=n_cy_wef MessageNumber MessageTotal host=$orig_host$ $object_id$  | eval UserID=replace(UserID, "\'", "")  | lookup j6-ae-ad_users.csv objectSid AS UserID OUTPUT sAMAccountName as user  | eval user=case(UserID=="S-1-5-18", "SYSTEM", isnull(user), "NON-JSOC SOF-U User", true(), user)  | eval Path=if(isnull(Path),"No Path Provided", Path)  | sort MessageNumber  | stats list(ScriptBlockText) as full_script earliest(_time) as _time values(host) as host values(user) as user values(Path) as object_path  | nomv full_script
action.notable.param.rule_description = Detects the presence of the string "msbuild" in a PowerShell script. This may be indicative of an attempt to use "trusted developer utilities" for malicious purposes. Click the drilldown for "Contributing Events" to see script content.
action.notable.param.rule_title = PowerShell script containing MSBuild executed on host $orig_host$
action.notable.param.security_domain = endpoint
action.notable.param.severity = medium
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk = 1
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"host","risk_object_type":"system","risk_score":15},{"risk_object_field":"user","risk_object_type":"user","risk_score":15}]
action.risk.param._risk_message = MSBuild usage present in PowerShell script on host $host$
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
alert.digest_mode = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 47 * * * *
description = Detects the presence of the string "msbuild" in a PowerShell script. This may be indicative of an attempt to use "trusted developer utilities" for malicious purposes.
dispatch.earliest_time = -65m@m
dispatch.latest_time = -5m@m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = index=n_cy_wef MessageNumber MessageTotal source=XmlWinEventLog:Microsoft-Windows-PowerShell/Operational\
| search ScriptBlockText="* msbuild *"\
| `j6de_powershell_scriptblock_enrichments`\
| table _time host user Path ScriptBlockId\
| rename _time AS start_time Path AS object_path ScriptBlockId AS object_id\
| `j6de_msbuild_In_powershell_script_filter`
 
[Endpoint - J6DE - Network Share Discovery (PowerShell Module) - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1135"],"Migration":["ESM"],"Sigma":["6942bd25-5970-40ab-af49-944247103358"],"Jira":["JEA-901"],"Validated":["2022-03-28"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = J6DE - Network Share Discovery (PowerShell Module)
action.customsearchbuilder.enabled = false
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.drilldown_name = Contributing Events Drilldown
action.notable.param.drilldown_search = index=n_cy_wef source=XmlWinEventLog:Microsoft-Windows-PowerShell/Operational $orig_host$ | eval description=case(EventCode==4103, "Module Execution", EventCode==4104, "ScriptBlock Contents", EventCode==4105, "ScriptBlock Execution Start", EventCode==4106, "ScriptBlock Execution Complete") | rex field=ContextInfo "Runspace\sID\s\=\s(?<RunspaceId>.+\-.+\-.+\-.+)" | rex field=ContextInfo "Script\sName\s\=\s(?<ScriptName>.*)" | table _time EventCode description EventRecordID Payload RunspaceId ScriptName ScriptBlockId ScriptBlockText
action.notable.param.rule_description = The Get-SmbShare PowerShell module has been invoked on host $orig_host$. This may have been done via a script or on a PowerShell prompt. Use the drilldown search to view PowerShell logs from this host for that timeframe.
action.notable.param.rule_title = Get-SmbShare PowerShell module invoked on host $orig_host$
action.notable.param.security_domain = endpoint
action.notable.param.severity = low
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk = 1
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"host","risk_object_type":"system","risk_score":10},{"risk_object_field":"user","risk_object_type":"user","risk_score":10}]
action.risk.param._risk_message = Network shares enumerated on host $host$ by user $user$ via Get-SmbShare
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
alert.digest_mode = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 37 * * * *
description = Detects the usage of the "Get-SmbShare" module in either a powershell script or powershell prompt.
dispatch.earliest_time = -65m@m
dispatch.latest_time = -5m@m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = index=n_cy_wef source=XmlWinEventLog:Microsoft-Windows-PowerShell/Operational Payload ContextInfo get-smbshare\
| search EventCode=4103\
| rex field=ContextInfo "Command\sName\s\=\s(?<CommandName>\w+\-\w+)"\
| rex field=ContextInfo "Runspace\sID\s\=\s(?<RunspaceId>.+\-.+\-.+\-.+)"\
| rex field=ContextInfo "Script\sName\s\=\s(?<ScriptName>.*)"\
| rex field=ContextInfo "User\s\=\s(?<user>.*)"\
| search CommandName="Get-smbshare"\
| eval src_nt_domain=mvindex(split(user, "\\"), 0)\
| eval user=mvindex(split(user, "\\"), 1)\
| eval start_time=strftime(_time, "%Y-%b-%d %T UTC%z")\
| table start_time host CommandName Payload src_nt_domain user RunspaceId ScriptName\
| rename RunspaceId AS transaction_id, ScriptName AS file_path, CommandName AS command, Payload AS script_content\
| `j6de_network_share_discovery_powershell_module_filter`
 
[Endpoint - J6DE - Security Audit Log Cleared - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1070.001"],"Migration":["ESM"],"Jira":["JEA-789"],"Validated":["2022-02-18"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = J6DE - Security Audit Log Cleared
action.customsearchbuilder.enabled = false
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.extract_artifacts = {"asset":["src","dest","dvc","host"],"identity":["user"]}
action.notable.param.next_steps = {"version":1,"data":""}
action.notable.param.rule_description = $user$ cleared the security event log at $start_time$
action.notable.param.rule_title = Security Event Log Cleared On $orig_host$ by $user$
action.notable.param.security_domain = endpoint
action.notable.param.severity = high
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk = 1
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"host","risk_object_type":"system","risk_score":30},{"risk_object_field":"user","risk_object_type":"user","risk_score":30}]
action.risk.param._risk_message = Security event log cleared on host $host$ by user $user$
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
alert.digest_mode = 0
alert.suppress = 1
alert.suppress.fields = Computer,EventRecordID,user
alert.suppress.period = 1s
alert.track = 1
counttype = number of events
cron_schedule = 32 * * * *
description = This alert indicates that a user has cleared the security event log on a Windows system. The user field is set to a combination of the "SubjectDomainName" and the "SubjectUserName". If the first part of the user is not NIPERNET or SOF, then a local user performed the action.
dispatch.earliest_time = -70m@m
dispatch.latest_time = -10m@m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = index=n_cy_wef source=XmlWinEventLog:Security sourcetype=xmlwineventlog logfilecleared \
| search EventCode=1102\
| stats earliest(SystemTime) as start_time values(EventCode) AS signature_id, values(EventRecordID) AS src_record, values(user) AS user by host\
| `j6de_security_audit_log_cleared_whitelist`